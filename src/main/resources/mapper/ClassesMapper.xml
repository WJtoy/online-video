<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
			"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.item.dao.ClassesDao">
    <resultMap type="Classes" id="ClassesResult">
        <id property="id" column="id"></id>
        <result property="classname" column="classname"></result>
        <result property="fid" column="fid"></result>
       <!--  指定联合查询出的分类表字段的封装 -->
    <!-- <association property="classes" javaType="com.item.bean.Classes">
    	<id column="id" property="cid"/>
    	<result column="classname" property="classname"/>
    	<result column="fid" property="fid"/>
    </association> -->
    </resultMap>
    
    
    
    
     <!--01.自关联查询一对多-->
      <resultMap id="selectCategoriesByFid" type="com.item.bean.Classes">
          <id property="id" column="id"/>
          <result property="classname" column="classname"/>
          <result property="fid" column="fid"/>
          <collection property="children" ofType="com.item.bean.Classes"
           select="findClassesByParentId" column="id"/>
      </resultMap>
      
      
      <!--0２.自关联查询多对一-->
      <resultMap type="Classes" id="classesMapper">
		<id column="id" property="id"/>
		<result column="classname" property="classname"/>
	    <result column="fid" property="fid"/>		
		<association property="parent" 
					 javaType="Classes"
					 select="selectByChildrenByid"
					 column="fid"/>
	  </resultMap>

	<!-- 查询所有的二级分类 -->
	<select id="selectByChildrenId" resultMap="classesMapper">
		select id,classname,fid from t_classification where fid!=0
	</select>
	
	<select id="selectByChildrenByid" resultMap="classesMapper" >
		select id,classname,fid from t_classification where id=#{xxx}
	</select>
	
	
	<sql id="Base_Column_List">
    	id, classname
 	 </sql>
	<!-- parameterType="com.item.bean.Classes" -->
	<select id="selectByExample"  resultMap="ClassesResult">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_classification  where fid=0
   <!--  <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if> -->
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  
  <!--　一级分类  -->
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ClassesResult">
    select 
    <include refid="Base_Column_List" />
    from t_classification
    where id = #{id,jdbcType=INTEGER} 
  </select>
  
   <select id="getClassesByParentId" parameterType="java.lang.Integer" resultMap="ClassesResult">
    select 
    <include refid="Base_Column_List" />
    from t_classification
    where id = #{id,jdbcType=INTEGER} 
   </select>
  
  <select id="findClassesByParentId" resultMap="selectCategoriesByFid">
        select * from t_classification where fid=#{0}
  </select>
  <insert id="addParentClasses" keyProperty="id" parameterType="Classes" useGeneratedKeys="true" >
        insert into t_classification
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <!-- <if test="id != null" >
                id,
            </if> -->
            <if test="classname!= null" >
               classname,
            </if>
            <if test="fid != null" >
               fid,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
           <!--  <if test="id != null" >
                #{id,jdbcType=INTEGER},
            </if> -->
            <if test="classname != null" >
               #{classname,jdbcType=VARCHAR},
            </if>
            <if test="fid != null" >
                #{fid,jdbcType=INTEGER},
            </if>
          </trim>
    </insert>
    
    <delete id="deleteParentClasses">
   		delete from t_classification
    			where id = #{id,jdbcType=INTEGER} or fid=#{fid,jdbcType=INTEGER}
    </delete>
    
    
     <update id="updateParentClasses" parameterType="Classes">
  	  update t_classification
    <set>
      <if test="classname != null">
        classname = #{classname,jdbcType=VARCHAR},
      </if>
      
      <if test="fid != null">
        fid = #{fid,jdbcType=INTEGER}
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}  
  </update>
   
   
   
   
   <!--二级分类  -->
   <select id="getChildrenClassesAll" resultMap="classesMapper">
		select * from t_classification where fid!=0
   </select>
   
   <select id="findClassesByChildrenId" resultMap="classesMapper">
	   select * from t_classification where id=#{id}
  </select>
   
  <insert id="addChildrenClasses" keyProperty="id" parameterType="Classes" useGeneratedKeys="true" >
        insert into t_classification
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <!-- <if test="id != null" >
                id,
            </if> -->
            <if test="classname!= null" >
                classname,
            </if>
            <if test="fid != null" >
                fid,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
           <!--  <if test="id != null" >
                #{id,jdbcType=INTEGER},
            </if> -->
            <if test="classname != null" >
                #{classname,jdbcType=VARCHAR},
            </if>
            <if test="fid != null" >
                #{fid,jdbcType=INTEGER},
            </if>
          </trim>
    </insert>
    
    
    <!-- 删除二级分类 -->
    <delete id="deleteChildrenClasses" parameterType="java.lang.Integer">
   		delete from t_classification
    			where id = #{id,jdbcType=INTEGER}
    </delete>
    <delete id="deleteBatch">
     delete from t_classification  where id in
	      <foreach  item="ids"  collection="array" open="(" separator=',' close=")">
	     		 #{ids}
	      </foreach>
	</delete>
    
    
	<!-- 修改二级分类 -->    
	<update id="updateChildrenClasses" parameterType="Classes">
  	  update t_classification
    <set>
      <if test="classname != null">
        classname = #{classname,jdbcType=VARCHAR},
      </if>
      <if test="fid != null">
        fid = #{fid,jdbcType=INTEGER}
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}  
  </update>   
  
  <!-- 查询根据删除的一级id查找是否有所有的二级分类  -->
  <!-- <select id="findChildrenClassesByids" parameterType="Integer" resultType="java.lang.Integer">
		  select id from t_classification where id=#{id,jdbcType=INTEGER}
  </select> -->
   
   <!-- 查询根据一级ID来查询及以下的二级ID数据 -->
   <select id="findByIdChildrenClasses" parameterType="Integer" resultMap="ClassesResult">
		  select id,classname,fid from t_classification where fid=#{id,jdbcType=INTEGER}
   </select>
	
	<!-- 根据相应的课程id所查的对应的学习路线 -->
	<select id="getLearningRoute" parameterType="Integer" >
		select  base_advance from t_course where id=#{id,jdbcType=INTEGER}
	</select>
	
	<!-- 查询所有分类 -->
	<select id="findAllClass" resultMap="ClassesResult">
		select id,classname,fid from t_classification 		
	</select>
	
</mapper>