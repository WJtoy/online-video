<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!--SpringMVC的配置文件，包含网站跳转逻辑的控制，配置  -->
	<context:component-scan base-package="com.item" use-default-filters="false">
		<!--只扫描控制器。  -->
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
	
	<!--配置视图解析器，方便页面返回  -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/"></property>
		<property name="suffix" value=".jsp"></property>
	</bean>
	
	<!--两个标准配置  -->
	<!-- 将springmvc不能处理的请求交给tomcat -->
	<mvc:default-servlet-handler/>
	<!-- 能支持springmvc更高级的一些功能，JSR303校验，快捷的ajax...映射动态请求 -->
	<!-- <mvc:annotation-driven/> -->
		<!-- 配置注解映射器和注解适配器 -->
	
		<!-- 配置拦截器 -->
	<mvc:interceptors>
		<mvc:interceptor>
			<!--  /**  表示拦截所有mvc控制器 -->
			<mvc:mapping path="/user/index"/>
			<!-- mvc:exclude-mapping是另外一种拦截，它可以在你后来的测试中对某个页面进行不拦截，这样就不用在
				LoginInterceptor的preHandler方法里面获取不拦截的请求uri地址了(优选) -->
<!-- 			<mvc:exclude-mapping path=""/> -->
			<bean class="com.item.interceptor.LoginInterceptor"></bean>			
		</mvc:interceptor>
	</mvc:interceptors>
	
	<mvc:interceptors>
		<mvc:interceptor>
			<!-- /**  表示拦截所有mvc控制器 -->
			<mvc:mapping path="/play/player"/>	<!-- 拦截的动作或页面 -->
			<!-- mvc:exclude-mapping是另外一种拦截，它可以在你后来的测试中对某个页面进行不拦截，这样就不用在
				LoginInterceptor的preHandler方法里面获取不拦截的请求uri地址了(优选) -->
<!-- 			<mvc:exclude-mapping path=""/> -->
			<bean class="com.item.interceptor.LoginReceptionInterceptor"></bean>			
		</mvc:interceptor>
	</mvc:interceptors>
	
	<mvc:interceptors>
		<mvc:interceptor>
			<!-- /**  表示拦截所有mvc控制器 -->
			<mvc:mapping path="/receptionUser"/>	<!-- 拦截的动作或页面 -->
			<!-- mvc:exclude-mapping是另外一种拦截，它可以在你后来的测试中对某个页面进行不拦截，这样就不用在
				LoginInterceptor的preHandler方法里面获取不拦截的请求uri地址了(优选) -->
<!-- 			<mvc:exclude-mapping path=""/> -->
			<bean class="com.item.interceptor.LoginReceptionInterceptor"></bean>			
		</mvc:interceptor>
	</mvc:interceptors>
	
	
		
	<mvc:annotation-driven></mvc:annotation-driven>
	
	<!-- 静态资源解析，包括js,css,img... -->
	<mvc:resources location="/static/" mapping="/static/**" cache-period="360"></mvc:resources>
	<mvc:resources location="/uploads/" mapping="/uploads/**" cache-period="360"></mvc:resources>
	<mvc:resources location="/backui/" mapping="/backui/**" cache-period="360"></mvc:resources>	
	<mvc:resources location="/bootstrap3/" mapping="/bootstrap3/**" cache-period="360"></mvc:resources>	
	<mvc:resources location="/videoJS/" mapping="/videoJS/**" cache-period="360"></mvc:resources>	
	<mvc:resources location="/bootstraps4/" mapping="/bootstraps4/**" cache-period="360"></mvc:resources>
	<!-- 视图解析器 -->
	
	
	
	
	
</beans>
